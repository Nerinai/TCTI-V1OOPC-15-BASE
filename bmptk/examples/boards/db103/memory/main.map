Archive member included because of file (symbol)

c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a(_divsi3.o)
                              sw-uart.o (__aeabi_idiv)

Allocating common symbols
Common symbol       size              file

__dso_handle        0x4               bmptk_cortex.o
s                   0x43              main.o

Discarded input sections

 .text          0x00000000        0x0 timer.o
 .data          0x00000000        0x0 timer.o
 .bss           0x00000000        0x0 timer.o
 .text          0x00000000        0x0 sw-uart.o
 .data          0x00000000        0x0 sw-uart.o
 .bss           0x00000000        0x0 sw-uart.o
 .text          0x00000000        0x0 main.o
 .data          0x00000000        0x0 main.o
 .bss           0x00000000        0x0 main.o
 .text          0x00000000        0x0 bmptk_cortex.o
 .data          0x00000000        0x0 bmptk_cortex.o
 .bss           0x00000000        0x0 bmptk_cortex.o
 .text.__cxa_pure_virtual
                0x00000000        0x2 bmptk_cortex.o
 COMMON         0x00000000        0x4 bmptk_cortex.o
 .text          0x00000000        0x0 bmptk_heap_bmptk.o
 .data          0x00000000        0x0 bmptk_heap_bmptk.o
 .bss           0x00000000        0x0 bmptk_heap_bmptk.o
 .text.free     0x00000000        0x8 bmptk_heap_bmptk.o
 .text          0x00000000        0x0 bmptk_fixed_size_stack.o
 .data          0x00000000        0x0 bmptk_fixed_size_stack.o
 .bss           0x00000000        0x0 bmptk_fixed_size_stack.o
 .data          0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a(_divsi3.o)
 .bss           0x00000000        0x0 c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a(_divsi3.o)

Memory Configuration

Name             Origin             Length             Attributes
rom              0x00000000         0x00008000         xr
ram              0x10000000         0x00001000         xrw
nul              0x20000000         0x00000000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a
LOAD timer.o
LOAD sw-uart.o
LOAD main.o
LOAD bmptk_cortex.o
LOAD bmptk_heap_bmptk.o
LOAD bmptk_fixed_size_stack.o
START GROUP
LOAD c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a
LOAD c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/../../../../arm-none-eabi/lib/armv6-m\libc.a
END GROUP
                0x00000000                __rom_start = ORIGIN (rom)
                0x00008000                __rom_size = 0x8000
                0x00008000                __rom_end = (__rom_start + __rom_size)
                0x10000000                __ram_start = ORIGIN (ram)
                0x00001000                __ram_size = 0x1000
                0x10001000                __ram_end = (__ram_start + __ram_size)
                [0x00000000]                PROVIDE (__rom_start, __rom_start)
                [0x00008000]                PROVIDE (__rom_size, __rom_size)
                [0x00008000]                PROVIDE (__rom_end, __rom_end)
                [0x10000000]                PROVIDE (__ram_start, __ram_start)
                [0x00001000]                PROVIDE (__ram_size, __ram_size)
                [0x10001000]                PROVIDE (__ram_end, __ram_end)

.text           0x00000000      0x9cc
                0x00000000                . = ALIGN (0x4)
                0x00000000                __text_start = .
                [0x00000000]                PROVIDE (__text_start, __text_start)
                0x00000000                . = ALIGN (0x4)
 *(.vectors)
 .vectors       0x00000000       0x20 bmptk_cortex.o
                0x00000000                __vectors
                0x00000020                . = ALIGN (0x4)
 *(.text .text.* .gnu.linkonce.t.*)
 .text.timer_init
                0x00000020       0x28 timer.o
                0x00000020                timer_init
 .text.now      0x00000048        0xc timer.o
                0x00000048                now
 .text.await    0x00000054       0x10 timer.o
                0x00000054                await
 .text.txd_low  0x00000064       0x18 sw-uart.o
                0x00000064                txd_low
 .text.txd_high
                0x0000007c       0x18 sw-uart.o
                0x0000007c                txd_high
 .text.uart_init
                0x00000094       0x1c sw-uart.o
                0x00000094                uart_init
 .text.uart_put_char
                0x000000b0       0x48 sw-uart.o
                0x000000b0                uart_put_char
 .text.uart_put_string
                0x000000f8       0x14 sw-uart.o
                0x000000f8                uart_put_string
 .text.uart_put_int_decimal
                0x0000010c       0x48 sw-uart.o
                0x0000010c                uart_put_int_decimal
 .text.uart_put_int_hexadecimal_digit
                0x00000154       0x16 sw-uart.o
                0x00000154                uart_put_int_hexadecimal_digit
 .text.uart_put_int_hexadecimal
                0x0000016a       0x1c sw-uart.o
                0x0000016a                uart_put_int_hexadecimal
 *fill*         0x00000186        0x2 
 .text.print_memmap_line
                0x00000188       0x3c main.o
                0x00000188                print_memmap_line
 .text.print_allocate
                0x000001c4       0x68 main.o
                0x000001c4                print_allocate
 .text.memmap_print
                0x0000022c      0x234 main.o
                0x0000022c                memmap_print
 .text.startup.main
                0x00000460       0x4c main.o
                0x00000460                main
 .text.__startup
                0x000004ac       0x58 bmptk_cortex.o
                0x000004ac                __startup
 .text.__aeabi_idiv0
                0x00000504        0x4 bmptk_cortex.o
                0x00000504                __aeabi_idiv0
 .text.malloc   0x00000508       0x28 bmptk_heap_bmptk.o
                0x00000508                malloc
 .text          0x00000530      0x1e0 c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a(_divsi3.o)
                0x00000530                __divsi3
                0x00000530                __aeabi_idiv
                0x000006fc                __aeabi_idivmod
                0x00000710                . = ALIGN (0x4)
 *(.glue_7t .glue_7)
 .glue_7        0x00000000        0x0 linker stubs
 .glue_7t       0x00000000        0x0 linker stubs
                0x00000710                . = ALIGN (0x4)
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.1
                0x00000710        0xc sw-uart.o
 .rodata.text_in_code
                0x0000071c       0x22 main.o
                0x0000071c                text_in_code
 .rodata.str1.1
                0x0000073e      0x28b main.o
                                0x28d (size before relaxing)
                0x000009cc                . = ALIGN (0x4)
 *fill*         0x000009c9        0x3 
 *(.ARM.extab* .gnu.linkonce.armextab.*)
                0x000009cc                . = ALIGN (0x4)
 *(.gcc_except_table)
                0x000009cc                . = ALIGN (0x4)
 *(.eh_frame_hdr)
                0x000009cc                . = ALIGN (0x4)
 *(.eh_frame)
                0x000009cc                . = ALIGN (0x4)
                0x000009cc                __text_end = .
                [0x000009cc]                PROVIDE (__text_end, __text_end)

.vfp11_veneer   0x000009cc        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x000009cc        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x000009cc        0x0
 .iplt          0x00000000        0x0 sw-uart.o

.rel.dyn        0x000009cc        0x0
 .rel.iplt      0x00000000        0x0 sw-uart.o

.IF_YOU_SEE_THIS_YOU_HAVE_ONE_OR_MORE_GLOBAL_OBJECT_CONSTRUCTORS
 *(.init)
 *(.preinit_array)
 *(SORT(.init_array.*))
 *(.init_array)
                0x000009cc                . = ALIGN (0x4)
                0x000009cc                __exidx_start = .
                [0x000009cc]                PROVIDE (__exidx_start, __exidx_start)

.ARM.exidx
 *(.ARM.exidx* .gnu.linkonce.armexidx.*)
                0x000009cc                . = ALIGN (0x4)
                0x000009cc                __exidx_end = .
                [0x000009cc]                PROVIDE (__exidx_end, __exidx_end)

.bss            0x10000000      0x448
                0x10000000                . = ALIGN (0x4)
                0x10000000                __stack_start = .
                [0x10000000]                PROVIDE (__stack_start, __stack_start)
                0x10000000                . = ALIGN (0x4)
 *(.bmptk_stack)
 .bmptk_stack   0x10000000      0x400 bmptk_fixed_size_stack.o
                0x10000000                bmptk_stack
                0x10000400                . = ALIGN (0x8)
                0x10000400                __main_stack_end = .
                [0x10000400]                PROVIDE (__main_stack_end, __main_stack_end)
                0x10000400                . = ALIGN (0x4)
                0x10000400                __stack_end = .
                [0x10000400]                PROVIDE (__stack_end, __stack_end)
                0x10000400                . = ALIGN (0x4)
                0x10000400                __bss_start = .
                [0x10000400]                PROVIDE (__bss_start, __bss_start)
                0x10000400                . = ALIGN (0x4)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss.total     0x10000400        0x4 main.o
                0x10000400                total
                0x10000404                . = ALIGN (0x4)
 *(COMMON)
 COMMON         0x10000404       0x43 main.o
                0x10000404                s
                0x10000448                . = ALIGN (0x4)
 *fill*         0x10000447        0x1 
                0x10000448                __bss_end = .
                [0x10000448]                PROVIDE (__bss_end, __bss_end)

.data           0x10000448       0x34 load address 0x000009cc
                0x10000448                . = ALIGN (0x4)
                0x000009cc                __data_init_start = LOADADDR (.data)
                [0x000009cc]                PROVIDE (__data_init_start, __data_init_start)
                0x10000448                __data_start = .
                [0x10000448]                PROVIDE (__data_start, __data_start)
                0x10000448                . = ALIGN (0x4)
 *(.data .data.* .gnu.linkonce.d.*)
 .data.title    0x10000448       0x11 main.o
                0x10000448                title
 .data.text_in_data
                0x10000459       0x1a main.o
                0x10000459                text_in_data
 *fill*         0x10000473        0x1 
 .data._last_free
                0x10000474        0x4 bmptk_heap_bmptk.o
                0x10000474                _last_free
 .data._first_free
                0x10000478        0x4 bmptk_heap_bmptk.o
                0x10000478                _first_free
                0x1000047c                . = ALIGN (0x4)
                0x1000047c                __data_end = .
                [0x1000047c]                PROVIDE (__data_end, __data_end)
                0x000009cc                __data_init_end = LOADADDR (.data)
                [0x000009cc]                PROVIDE (__data_init_end, __data_init_end)
                0x00000034                PROVIDE (__data_size, (__data_end - __data_start))
                0x00000034                PROVIDE (__data_init_size, __data_size)
                0x00000a00                PROVIDE (__data_init_end, (__data_init_start + __data_init_size))

.igot.plt       0x1000047c        0x0 load address 0x00000a00
 .igot.plt      0x00000000        0x0 sw-uart.o
                0x1000047c                . = ALIGN (0x4)
                0x1000047c                __heap_start = .
                [0x1000047c]                PROVIDE (__heap_start, __heap_start)
                0x1000047c                . = ALIGN (0x4)
                0x10001000                __heap_end = __ram_end
                [0x10001000]                PROVIDE (__heap_end, __heap_end)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame    0x00000000       0x20
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a(_divsi3.o)

.comment        0x00000000       0x70
 .comment       0x00000000       0x70 timer.o
                                 0x71 (size before relaxing)
 .comment       0x00000000       0x71 sw-uart.o
 .comment       0x00000000       0x71 main.o
 .comment       0x00000000       0x71 bmptk_cortex.o
 .comment       0x00000000       0x71 bmptk_heap_bmptk.o
 .comment       0x00000000       0x71 bmptk_fixed_size_stack.o

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.note.gnu.arm.ident
 *(.note.gnu.arm.ident)

.ARM.attributes
                0x00000000       0x31
 *(.ARM.attributes)
 .ARM.attributes
                0x00000000       0x31 timer.o
 .ARM.attributes
                0x00000031       0x31 sw-uart.o
 .ARM.attributes
                0x00000062       0x31 main.o
 .ARM.attributes
                0x00000093       0x31 bmptk_cortex.o
 .ARM.attributes
                0x000000c4       0x31 bmptk_heap_bmptk.o
 .ARM.attributes
                0x000000f5       0x31 bmptk_fixed_size_stack.o
 .ARM.attributes
                0x00000126       0x1e c:/program files (x86)/gnu tools arm embedded/4.9 2015q3/bin/../lib/gcc/arm-none-eabi/4.9.3/armv6-m\libgcc.a(_divsi3.o)

/DISCARD/
 *(.note.GNU-stack)
                0x000009cc                PROVIDE (__text_size, (__text_end - __text_start))
                0x00000000                PROVIDE (__exidx_size, (__exidx_end - __exidx_start))
                0x00000048                PROVIDE (__bss_size, (__bss_end - __bss_start))
                0x00000400                PROVIDE (__stack_size, (__stack_end - __stack_start))
                0x00000b84                PROVIDE (__heap_size, (__heap_end - __heap_start))
OUTPUT(main.elf elf32-littlearm)
